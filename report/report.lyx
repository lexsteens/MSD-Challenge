#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Case Study: Kaggle MSD challenge competition
\end_layout

\begin_layout Section*
Problem Statement
\end_layout

\begin_layout Standard
Given:
\end_layout

\begin_layout Enumerate
The full listening history for 1M users 
\end_layout

\begin_layout Enumerate
half of the listening history for 110K users (called the visible listening
 history),
\end_layout

\begin_layout Standard
propose a ranked list of 500 songs per user, in decreasing probability of
 this particular user listening to that song.
\end_layout

\begin_layout Standard
The results will be evaluated using the Mean Average Precision (truncated
 at 500) of the proposed ranking against the second half of the 110K users
 listening history.
 This second half of the listening history was not available to the competitors,
 which needed to send their proposition and receive in return the result
 of the Mean Average Precision through a web interface hosted at Kaggle.
 
\end_layout

\begin_layout Section*
Overview of possible methods
\end_layout

\begin_layout Subsection*
Content based
\end_layout

\begin_layout Standard
Content based methods extract song characteristics (such as Genre, beat,
 lyrics, ...) to build a model (such as a clustering the songs) and recommend
 songs similar to those the user has listened in the past.
\end_layout

\begin_layout Subsection*
Context based
\end_layout

\begin_layout Standard
Context base methods use social information such as comments, music review,
 tags, ...
 to predict similarities between songs
\end_layout

\begin_layout Subsection*
Collaborative Filtering
\end_layout

\begin_layout Standard
Collaborative Filtering techniques
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 are based on the assumption that the listening history of all users provides
 valuable information that one could exploit to give recommendations to
 a specific user.
\end_layout

\begin_layout Standard
Different flavor of Collaborative filtering exists, which can be classified
 (at high level) by:
\end_layout

\begin_layout Itemize
their use of modelization:
\end_layout

\begin_deeper
\begin_layout Itemize

\noun on
Memory based
\noun default
 Collaborative Filtering methods use the entire set of user history to make
 a prediction, and are therefore memory consumers
\end_layout

\begin_layout Itemize

\noun on
Model Based
\noun default
 Collaborative Filtering methods build and train a data mining prediction
 model of the users preferences, that will later be used to provide a prediction
 for a specific user
\end_layout

\end_deeper
\begin_layout Itemize
their focus:
\end_layout

\begin_deeper
\begin_layout Itemize

\noun on
User Based
\noun default
 Collaborative Filtering methods compute the similiarities between the user
 A for which we would like to make a prediction and all other users, then
 proposing to user A the songs listened by those similar users, ranked in
 decreasing order of user A predicted preference
\end_layout

\begin_layout Itemize

\noun on
Item Based
\noun default
 Collaborative Filtering methods, on the other hand, first precompute the
 similiarities between each songs, and use those similarities to provide
 user A with a ranked list of songs similar to the ones he listened to 
\end_layout

\end_deeper
\begin_layout Subsection*
Dimensionality Reduction
\end_layout

\begin_layout Standard
Dimensionality Reduction methods like the Principal Component Analisys can
 be used to reduce the amount of data calculations are based on, then improving
 response times and ofthen, also, recommendation performances.
 Singular Value Decomposition can also be used to provide recommendations
 on its own.
\end_layout

\begin_layout Subsection*
Hybrid Methodologies
\end_layout

\begin_layout Standard
Different approaches can be used to combine the results of the several recommend
ation strategies into one, in an atempt to get higher recommendation performance
s.
 Those hybridization mothods can be classified as follow:
\end_layout

\begin_layout Itemize

\noun on
Monolithic
\noun default
: creates a single recommendation component, using a complexe recommending
 algorithm in its cores:
\end_layout

\begin_deeper
\begin_layout Itemize

\noun on
Feature Combination
\noun default
: combines the scores of several scoring algorithms into one score used
 to rank the songs
\end_layout

\end_deeper
\begin_layout Itemize

\noun on
Parallel: 
\noun default
uses two or more simple ranking algorithms in parallel to creates a higher
 level ranking:
\end_layout

\begin_deeper
\begin_layout Itemize

\noun on
Weighting: 
\noun default
assigns a weight to each ranking algorithm then, for each final recommendation,
 
\begin_inset Quotes eld
\end_inset

randomly
\begin_inset Quotes erd
\end_inset

 chooses the next recommendation of one of the rankings according to their
 weights
\end_layout

\begin_layout Itemize

\noun on
Switching: 
\noun default
uses an oracle to decide which ranking algorithm to use for a specific user,
 by looking at the characteristics of this particular user (history length,
 number of nearest neighboors, sensibility to popular songs, ...)
\end_layout

\end_deeper
\begin_layout Itemize

\noun on
Pipelined
\noun default
: uses two or more simple ranking algorithms one after each other to creates
 a final ranking:
\end_layout

\begin_deeper
\begin_layout Itemize

\noun on
Cascade: 
\noun default
each successive algorithm exclude songs from the list of all possible songs
 to recommend
\end_layout

\begin_layout Itemize

\noun on
Meta-Level: 
\noun default
each algorithm builds a model that can be exploited by the next one, until
 the last algorithm provides a ranking based on the model it received
\end_layout

\end_deeper
\begin_layout Section*
Performance evaluation
\end_layout

\begin_layout Standard
There are many performance measures available to evaluate recommender systems.
\end_layout

\begin_layout Standard
The Kaggle MSD Challenge Competition uses the Truncated Mean Average Precision
 (MAP) to evaluate recommendation submissions.
 If the Precision at rank 
\emph on
k
\emph default
 is denoted by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{\left(u,k\right)}=\frac{1}{k}\sum_{l=1}^{k}R_{(u,l)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{where: }R_{(u,l)}=\begin{cases}
1 & \text{if song at rank \emph{l} is a relevant song}\\
0 & \text{otherwise}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
The Average Precision for user 
\emph on
u,
\emph default
 truncated at rank 
\emph on
K
\emph default
, is then:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
AP(u,K)=\frac{1}{\tau_{u}}\sum_{k=1}^{K}P_{(u,k)}R_{(u,k)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{where: }\tau_{u}=\min\left(K,P_{(u,K)}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The Mean Average Precision is then the average of 
\emph on
AP
\emph default
's for all users:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
MAP(K)=\frac{1}{U}\sum_{u=1}^{U}AP(u,K)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{where: }U=\text{number of users to evaluate}
\]

\end_inset


\end_layout

\begin_layout Section*
Datasets
\end_layout

\begin_layout Section*
Choosen approach
\end_layout

\begin_layout Section*
Results
\end_layout

\begin_layout Section*
conclusion & Future Work
\end_layout

\begin_layout Part*
ANNEXES
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\emph on
Will Hill, Larry Stead, Mark Rosenstein, George Furnas, and South Street
\emph default
.
 Recommending and Evaluating Choices in a Vitual Community of Use.
 
\emph on
Mosaic A Journal For The Interdisciplinary Study Of Literature
\emph default
, pages 5â€“12, 1995.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset


\emph on
Xiaoyuan Su and Taghi M.
 Khoshgoftaar
\emph default
.
 A survey of collaborative filtering techniques.
 
\emph on
Advances in Artificial Intelligence, January 2009.
\end_layout

\end_body
\end_document
